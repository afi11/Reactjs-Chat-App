{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\code\\\\ReactJS\\\\chatapp\\\\src\\\\components\\\\autocomplete\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AutoComplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value;\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion.name.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      }); // this.props.history.push(`/chat/`${})\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeSuggestion,\n        filteredSuggestions\n      } = this.state;\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          userInput: filteredSuggestions[activeSuggestion]\n        });\n      } else if (e.keyCode === 38) {\n        if (activeSuggestion === 0) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion - 1\n        });\n      } else if (e.keyCode === 40) {\n        if (activeSuggestion - 1 === filteredSuggestions.length) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion + 1\n        });\n      }\n    };\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\"\n    };\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"border-r border-b border-l border-gray-400 p-2 divide-y divide-gray-400\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }\n        }, filteredSuggestions.map((suggestion, index) => {\n          let className;\n\n          if (index === activeSuggestion) {\n            className = \"font-bold text-gray-700 py-2\";\n          }\n\n          return /*#__PURE__*/React.createElement(\"li\", {\n            className: className,\n            key: suggestion.id,\n            onClick: onClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }\n          }, suggestion.name);\n        }));\n      } else {\n        suggestionsListComponent = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"no-suggestions\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"em\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }\n        }, \"No suggestions, you're on your own!\"));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n      type: \"text\",\n      placeholder: \"Search People....\",\n      onChange: onChange,\n      onKeyDown: onKeyDown,\n      value: userInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), suggestionsListComponent);\n  }\n\n}\n\nAutoComplete.propTypes = {\n  suggestions: PropTypes.instanceOf(Array)\n};\nAutoComplete.defaultProps = {\n  suggestions: []\n};\nexport default AutoComplete;","map":{"version":3,"sources":["D:/CODE/code/ReactJS/chatapp/src/components/autocomplete/index.jsx"],"names":["React","Component","PropTypes","AutoComplete","constructor","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","name","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","state","keyCode","length","render","suggestionsListComponent","map","index","className","id","propTypes","instanceOf","Array","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AutoComplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    const filteredSuggestions = suggestions.filter(\r\n      (suggestion) =>\r\n        suggestion.name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  onClick = (e) => {\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText,\r\n    });\r\n    // this.props.history.push(`/chat/`${})\r\n  };\r\n\r\n  onKeyDown = (e) => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    if (e.keyCode === 13) {\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        showSuggestions: false,\r\n        userInput: filteredSuggestions[activeSuggestion],\r\n      });\r\n    } else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n    } else if (e.keyCode === 40) {\r\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n        return;\r\n      }\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput,\r\n      },\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <ul className=\"border-r border-b border-l border-gray-400 p-2 divide-y divide-gray-400\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              if (index === activeSuggestion) {\r\n                className = \"font-bold text-gray-700 py-2\";\r\n              }\r\n\r\n              return (\r\n                <li className={className} key={suggestion.id} onClick={onClick}>\r\n                  {suggestion.name}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions, you're on your own!</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <input\r\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n          type=\"text\"\r\n          placeholder=\"Search People....\"\r\n          onChange={onChange}\r\n          onKeyDown={onKeyDown}\r\n          value={userInput}\r\n        />\r\n        {suggestionsListComponent}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AutoComplete;\r\n"]},"metadata":{},"sourceType":"module"}