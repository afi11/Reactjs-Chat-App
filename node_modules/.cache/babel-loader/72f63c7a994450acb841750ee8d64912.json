{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\code\\\\ReactJS\\\\chatapp\\\\src\\\\pages\\\\home\\\\index.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport AutoComplete from \"../../components/autocomplete\";\nimport axios from \"axios\";\nimport favicon from \"../../assets/favicon.ico\";\nimport { urlApiMain } from \"../../utils/url\";\nimport { Link } from \"react-router-dom\";\nimport { Auth } from \"../../config\";\nimport Push from \"push.js\";\nimport Moment from \"react-moment\";\n\nconst CountUnreadMessage = props => {\n  const {\n    sender,\n    receiver\n  } = props;\n  const [count_unreadMessage, setUnreadMessage] = useState(0);\n\n  const unreadMessage = (sender, receiver) => {\n    axios.get(`${urlApiMain}countunreadmessage/${sender}/${receiver}`).then(res => {\n      setUnreadMessage(res.data);\n\n      if (res.data > 0) {\n        // localStorage.setItem(\"last_notification\", Date.now());\n        // if(localStorage.getItem(\"last_notification\")){\n        //   showNotif();\n        // }\n        let dt = localStorage.getItem(\"last_notification\");\n\n        if (dt == 0) {\n          localStorage.setItem(\"last_notification\", 1);\n        } else if (dt == 1) {\n          localStorage.setItem(\"last_notification\", Date.now());\n        } else {\n          showNotif();\n        }\n      } else {\n        localStorage.setItem(\"last_notification\", 0);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const showNotif = () => {\n    Push.create(\"Hello world!\", {\n      body: \"How's it hangin'?\",\n      icon: favicon,\n      timeout: 4000,\n      onClick: function () {\n        window.focus();\n        this.close();\n      }\n    });\n  };\n\n  useEffect(() => {\n    unreadMessage(sender, receiver); // const interval = setInterval(() => {\n    //   unreadMessage(sender, receiver);\n    // }, 1000);\n    // return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"absolute right-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, count_unreadMessage > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-green-400 rounded-full p-1 items-center justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-bold text-white text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, count_unreadMessage)) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nconst LatestMessage = props => {\n  const {\n    sender,\n    receiver\n  } = props;\n  const [latestMessage, setLatestMessage] = useState({});\n\n  const getLatestMessage = (sender, receiver) => {\n    axios.get(`${urlApiMain}getlatetsmessage/${sender}/${receiver}`).then(res => {\n      setLatestMessage(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getLatestMessage(sender, receiver);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, latestMessage.image ? /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), \" \", latestMessage.messages), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"absolute right-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    fromNow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, latestMessage.created_at)));\n};\n\nconst Home = () => {\n  const [userToTalk, setUserToTalk] = useState([]);\n  const [userLatestMessages, setUserLatestMessages] = useState([]);\n\n  const letsMessageWithPeople = () => {\n    axios.get(`${urlApiMain}letmessage`).then(res => {\n      setUserToTalk(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const latestMessages = () => {\n    axios.get(`${urlApiMain}latestmessage`).then(res => {\n      setUserLatestMessages(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    letsMessageWithPeople();\n    latestMessages();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white md:w-1/2 mt-6 rounded shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-6 py-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoComplete, {\n    suggestions: userToTalk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, userLatestMessages.map(latestUser => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"flex flex-row relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"text-gray-700 font-semibold text-lg\",\n    to: `/chat/${latestUser.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, latestUser.name), /*#__PURE__*/React.createElement(CountUnreadMessage, {\n    sender: latestUser.id,\n    receiver: Auth.getTokenAndUserId().userid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(LatestMessage, {\n    sender: latestUser.id,\n    receiver: Auth.getTokenAndUserId().userid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/CODE/code/ReactJS/chatapp/src/pages/home/index.jsx"],"names":["React","useEffect","useState","AutoComplete","axios","favicon","urlApiMain","Link","Auth","Push","Moment","CountUnreadMessage","props","sender","receiver","count_unreadMessage","setUnreadMessage","unreadMessage","get","then","res","data","dt","localStorage","getItem","setItem","Date","now","showNotif","catch","err","console","log","create","body","icon","timeout","onClick","window","focus","close","LatestMessage","latestMessage","setLatestMessage","getLatestMessage","image","messages","created_at","Home","userToTalk","setUserToTalk","userLatestMessages","setUserLatestMessages","letsMessageWithPeople","latestMessages","map","latestUser","id","name","getTokenAndUserId","userid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AutoComplete from \"../../components/autocomplete\";\r\nimport axios from \"axios\";\r\nimport favicon from \"../../assets/favicon.ico\";\r\nimport { urlApiMain } from \"../../utils/url\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Auth } from \"../../config\";\r\nimport Push from \"push.js\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst CountUnreadMessage = (props) => {\r\n  const { sender, receiver } = props;\r\n  const [count_unreadMessage, setUnreadMessage] = useState(0);\r\n\r\n  const unreadMessage = (sender, receiver) => {\r\n    axios\r\n      .get(`${urlApiMain}countunreadmessage/${sender}/${receiver}`)\r\n      .then((res) => {\r\n        setUnreadMessage(res.data);\r\n        if (res.data > 0) {\r\n          // localStorage.setItem(\"last_notification\", Date.now());\r\n          // if(localStorage.getItem(\"last_notification\")){\r\n          //   showNotif();\r\n          // }\r\n          let dt = localStorage.getItem(\"last_notification\");\r\n          if (dt == 0) {\r\n            localStorage.setItem(\"last_notification\", 1);\r\n          }\r\n          else if( dt == 1){\r\n            localStorage.setItem(\"last_notification\", Date.now());\r\n          }\r\n          else{\r\n            showNotif();\r\n          }\r\n        } else {\r\n          localStorage.setItem(\"last_notification\", 0);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const showNotif = () => {\r\n    Push.create(\"Hello world!\", {\r\n      body: \"How's it hangin'?\",\r\n      icon: favicon,\r\n      timeout: 4000,\r\n      onClick: function () {\r\n        window.focus();\r\n        this.close();\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    unreadMessage(sender, receiver);\r\n    // const interval = setInterval(() => {\r\n    //   unreadMessage(sender, receiver);\r\n    // }, 1000);\r\n    // return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"absolute right-0\">\r\n        {count_unreadMessage > 0 ? (\r\n          <div className=\"bg-green-400 rounded-full p-1 items-center justify-center\">\r\n            <p className=\"font-bold text-white text-sm\">\r\n              {count_unreadMessage}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst LatestMessage = (props) => {\r\n  const { sender, receiver } = props;\r\n  const [latestMessage, setLatestMessage] = useState({});\r\n\r\n  const getLatestMessage = (sender, receiver) => {\r\n    axios\r\n      .get(`${urlApiMain}getlatetsmessage/${sender}/${receiver}`)\r\n      .then((res) => {\r\n        setLatestMessage(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLatestMessage(sender, receiver);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-row relative\">\r\n      <p>\r\n        {latestMessage.image ? <i class=\"fas fa-image\"></i> : <></>}{\" \"}\r\n        {latestMessage.messages}\r\n      </p>\r\n      <p className=\"absolute right-0\">\r\n        <Moment fromNow>{latestMessage.created_at}</Moment>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => {\r\n  const [userToTalk, setUserToTalk] = useState([]);\r\n  const [userLatestMessages, setUserLatestMessages] = useState([]);\r\n\r\n  const letsMessageWithPeople = () => {\r\n    axios\r\n      .get(`${urlApiMain}letmessage`)\r\n      .then((res) => {\r\n        setUserToTalk(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const latestMessages = () => {\r\n    axios\r\n      .get(`${urlApiMain}latestmessage`)\r\n      .then((res) => {\r\n        setUserLatestMessages(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    letsMessageWithPeople();\r\n    latestMessages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <div className=\"bg-white md:w-1/2 mt-6 rounded shadow-lg\">\r\n        <div className=\"px-6 py-6\">\r\n          <AutoComplete suggestions={userToTalk} />\r\n          <ul className=\"mt-3\">\r\n            {userLatestMessages.map((latestUser) => (\r\n              <>\r\n                <li className=\"flex flex-row relative\">\r\n                  <Link\r\n                    className=\"text-gray-700 font-semibold text-lg\"\r\n                    to={`/chat/${latestUser.id}`}\r\n                  >\r\n                    {latestUser.name}\r\n                  </Link>\r\n                  <CountUnreadMessage\r\n                    sender={latestUser.id}\r\n                    receiver={Auth.getTokenAndUserId().userid}\r\n                  />\r\n                </li>\r\n                <LatestMessage\r\n                  sender={latestUser.id}\r\n                  receiver={Auth.getTokenAndUserId().userid}\r\n                />\r\n                <hr />\r\n              </>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}