{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\code\\\\ReactJS\\\\chatapp\\\\src\\\\pages\\\\home\\\\index.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport AutoComplete from \"../../components/autocomplete\";\nimport axios from \"axios\";\nimport { urlApiMain } from \"../../utils/url\";\nimport { Link } from \"react-router-dom\";\nimport { Auth } from \"../../config\";\nimport Moment from \"react-moment\";\n\nconst CountUnreadMessage = props => {\n  const {\n    sender,\n    receiver\n  } = props;\n  const [count_unreadMessage, setUnreadMessage] = useState(0);\n\n  const unreadMessage = (sender, receiver) => {\n    axios.get(`${urlApiMain}countunreadmessage/${sender}/${receiver}`).then(res => {\n      setUnreadMessage(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    unreadMessage(sender, receiver);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"absolute right-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, count_unreadMessage > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-green-400 rounded-full p-1 items-center justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-bold text-white text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, count_unreadMessage)) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nconst LatestMessage = props => {\n  const {\n    sender,\n    receiver\n  } = props;\n  const [latestMessage, setLatestMessage] = useState({});\n\n  const getLatestMessage = (sender, receiver) => {\n    axios.get(`${urlApiMain}getlatetsmessage/${sender}/${receiver}`).then(res => {\n      setLatestMessage(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getLatestMessage(sender, receiver);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, latestMessage.image ? /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), \" \", latestMessage.messages), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"absolute right-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    fromNow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, latestMessage.created_at)));\n};\n\nconst Home = () => {\n  const [userToTalk, setUserToTalk] = useState([]);\n  const [userLatestMessages, setUserLatestMessages] = useState([]);\n\n  const letsMessageWithPeople = () => {\n    axios.get(`${urlApiMain}letmessage`).then(res => {\n      setUserToTalk(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const latestMessages = () => {\n    axios.get(`${urlApiMain}latestmessage`).then(res => {\n      setUserLatestMessages(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const showNotif = () => {\n    if (!window.Notification) {\n      console.log(\"Browser does not support notifications.\");\n    } else {\n      // check if permission is already granted\n      if (Notification.permission === \"granted\") {\n        // show notification here\n        var notify = new Notification(\"Hi there!\", {\n          body: \"How are you doing?\",\n          icon: \"https://bit.ly/2DYqRrh\"\n        });\n      } else {\n        // request permission from user\n        Notification.requestPermission().then(function (p) {\n          if (p === \"granted\") {\n            // show notification here\n            var notify = new Notification(\"Hi there!\", {\n              body: \"How are you doing?\",\n              icon: \"https://bit.ly/2DYqRrh\"\n            });\n          } else {\n            console.log(\"User blocked notifications.\");\n          }\n        }).catch(function (err) {\n          console.error(err);\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    letsMessageWithPeople();\n    latestMessages();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white md:w-1/2 mt-6 rounded shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-6 py-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoComplete, {\n    suggestions: userToTalk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: showNotif(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Show\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, userLatestMessages.map(latestUser => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"flex flex-row relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"text-gray-700 font-semibold text-lg\",\n    to: `/chat/${latestUser.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, latestUser.name), /*#__PURE__*/React.createElement(CountUnreadMessage, {\n    sender: latestUser.id,\n    receiver: Auth.getTokenAndUserId().userid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(LatestMessage, {\n    sender: latestUser.id,\n    receiver: Auth.getTokenAndUserId().userid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/CODE/code/ReactJS/chatapp/src/pages/home/index.jsx"],"names":["React","useEffect","useState","AutoComplete","axios","urlApiMain","Link","Auth","Moment","CountUnreadMessage","props","sender","receiver","count_unreadMessage","setUnreadMessage","unreadMessage","get","then","res","data","catch","err","console","log","LatestMessage","latestMessage","setLatestMessage","getLatestMessage","image","messages","created_at","Home","userToTalk","setUserToTalk","userLatestMessages","setUserLatestMessages","letsMessageWithPeople","latestMessages","showNotif","window","Notification","permission","notify","body","icon","requestPermission","p","error","map","latestUser","id","name","getTokenAndUserId","userid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AutoComplete from \"../../components/autocomplete\";\r\nimport axios from \"axios\";\r\nimport { urlApiMain } from \"../../utils/url\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Auth } from \"../../config\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst CountUnreadMessage = (props) => {\r\n  const { sender, receiver } = props;\r\n  const [count_unreadMessage, setUnreadMessage] = useState(0);\r\n\r\n  const unreadMessage = (sender, receiver) => {\r\n    axios\r\n      .get(`${urlApiMain}countunreadmessage/${sender}/${receiver}`)\r\n      .then((res) => {\r\n        setUnreadMessage(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    unreadMessage(sender, receiver);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"absolute right-0\">\r\n        {count_unreadMessage > 0 ? (\r\n          <div className=\"bg-green-400 rounded-full p-1 items-center justify-center\">\r\n            <p className=\"font-bold text-white text-sm\">\r\n              {count_unreadMessage}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst LatestMessage = (props) => {\r\n  const { sender, receiver } = props;\r\n  const [latestMessage, setLatestMessage] = useState({});\r\n\r\n  const getLatestMessage = (sender, receiver) => {\r\n    axios\r\n      .get(`${urlApiMain}getlatetsmessage/${sender}/${receiver}`)\r\n      .then((res) => {\r\n        setLatestMessage(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLatestMessage(sender, receiver);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-row relative\">\r\n      <p>\r\n        {latestMessage.image ? <i class=\"fas fa-image\"></i> : <></>}{\" \"}\r\n        {latestMessage.messages}\r\n      </p>\r\n      <p className=\"absolute right-0\">\r\n        <Moment fromNow>{latestMessage.created_at}</Moment>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => {\r\n  const [userToTalk, setUserToTalk] = useState([]);\r\n  const [userLatestMessages, setUserLatestMessages] = useState([]);\r\n\r\n  const letsMessageWithPeople = () => {\r\n    axios\r\n      .get(`${urlApiMain}letmessage`)\r\n      .then((res) => {\r\n        setUserToTalk(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const latestMessages = () => {\r\n    axios\r\n      .get(`${urlApiMain}latestmessage`)\r\n      .then((res) => {\r\n        setUserLatestMessages(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const showNotif = () => {\r\n    if (!window.Notification) {\r\n      console.log(\"Browser does not support notifications.\");\r\n    } else {\r\n      // check if permission is already granted\r\n      if (Notification.permission === \"granted\") {\r\n        // show notification here\r\n        var notify = new Notification(\"Hi there!\", {\r\n          body: \"How are you doing?\",\r\n          icon: \"https://bit.ly/2DYqRrh\",\r\n        });\r\n      } else {\r\n        // request permission from user\r\n        Notification.requestPermission()\r\n          .then(function (p) {\r\n            if (p === \"granted\") {\r\n              // show notification here\r\n              var notify = new Notification(\"Hi there!\", {\r\n                body: \"How are you doing?\",\r\n                icon: \"https://bit.ly/2DYqRrh\",\r\n              });\r\n            } else {\r\n              console.log(\"User blocked notifications.\");\r\n            }\r\n          })\r\n          .catch(function (err) {\r\n            console.error(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    letsMessageWithPeople();\r\n    latestMessages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <div className=\"bg-white md:w-1/2 mt-6 rounded shadow-lg\">\r\n        <div className=\"px-6 py-6\">\r\n          <AutoComplete suggestions={userToTalk} />\r\n          <button onClick={showNotif()}>Show</button>\r\n          <ul className=\"mt-3\">\r\n            {userLatestMessages.map((latestUser) => (\r\n              <>\r\n                <li className=\"flex flex-row relative\">\r\n                  <Link\r\n                    className=\"text-gray-700 font-semibold text-lg\"\r\n                    to={`/chat/${latestUser.id}`}\r\n                  >\r\n                    {latestUser.name}\r\n                  </Link>\r\n                  <CountUnreadMessage\r\n                    sender={latestUser.id}\r\n                    receiver={Auth.getTokenAndUserId().userid}\r\n                  />\r\n                </li>\r\n                <LatestMessage\r\n                  sender={latestUser.id}\r\n                  receiver={Auth.getTokenAndUserId().userid}\r\n                />\r\n                <hr />\r\n              </>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}