{"ast":null,"code":"const setToken = (token, iduser, expired) => {\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"user_id\", iduser);\n  localStorage.setItem(\"expired\", expired);\n};\n\nconst getTokenAndUserId = () => {\n  const now = new Date();\n  let token = localStorage.getItem(\"token\");\n  let userid = localStorage.getItem(\"user_id\");\n  let expired = localStorage.getItem(\"expired\");\n  let data = {\n    token: token,\n    userid: userid\n  };\n\n  if (!token || !userid || !expired) {\n    return null;\n  }\n\n  if (now.getDate() >= parseInt(expired)) {\n    destroyToken();\n  } else {\n    return data;\n  }\n};\n\nconst destroyToken = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expired\");\n};\n\nconst isAuthenticated = () => {\n  if (getToken()) return true;else return false;\n};\n\nconst Auth = {\n  setToken,\n  getTokenAndUserId,\n  destroyToken,\n  isAuthenticated\n};\nexport default Auth;","map":{"version":3,"sources":["D:/CODE/code/ReactJS/chatapp/src/config/auth/index.js"],"names":["setToken","token","iduser","expired","localStorage","setItem","getTokenAndUserId","now","Date","getItem","userid","data","getDate","parseInt","destroyToken","removeItem","isAuthenticated","getToken","Auth"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,OAAhB,KAA4B;AAC3CC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;AACAG,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCH,MAAhC;AACAE,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCF,OAAhC;AACD,CAJD;;AAMA,MAAMG,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIP,KAAK,GAAGG,YAAY,CAACK,OAAb,CAAqB,OAArB,CAAZ;AACA,MAAIC,MAAM,GAAGN,YAAY,CAACK,OAAb,CAAqB,SAArB,CAAb;AACA,MAAIN,OAAO,GAAGC,YAAY,CAACK,OAAb,CAAqB,SAArB,CAAd;AACA,MAAIE,IAAI,GAAG;AACTV,IAAAA,KAAK,EAAEA,KADE;AAETS,IAAAA,MAAM,EAAEA;AAFC,GAAX;;AAIA,MAAI,CAACT,KAAD,IAAU,CAACS,MAAX,IAAqB,CAACP,OAA1B,EAAmC;AACjC,WAAO,IAAP;AACD;;AACD,MAAII,GAAG,CAACK,OAAJ,MAAiBC,QAAQ,CAACV,OAAD,CAA7B,EAAwC;AACtCW,IAAAA,YAAY;AACb,GAFD,MAEO;AACL,WAAOH,IAAP;AACD;AACF,CAjBD;;AAmBA,MAAMG,YAAY,GAAG,MAAM;AACzBV,EAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,SAAxB;AACD,CAHD;;AAKA,MAAMC,eAAe,GAAG,MAAM;AAC5B,MAAIC,QAAQ,EAAZ,EAAgB,OAAO,IAAP,CAAhB,KACK,OAAO,KAAP;AACN,CAHD;;AAKA,MAAMC,IAAI,GAAG;AACXlB,EAAAA,QADW;AAEXM,EAAAA,iBAFW;AAGXQ,EAAAA,YAHW;AAIXE,EAAAA;AAJW,CAAb;AAOA,eAAeE,IAAf","sourcesContent":["const setToken = (token, iduser, expired) => {\r\n  localStorage.setItem(\"token\", token);\r\n  localStorage.setItem(\"user_id\", iduser);\r\n  localStorage.setItem(\"expired\", expired);\r\n};\r\n\r\nconst getTokenAndUserId = () => {\r\n  const now = new Date();\r\n  let token = localStorage.getItem(\"token\");\r\n  let userid = localStorage.getItem(\"user_id\");\r\n  let expired = localStorage.getItem(\"expired\");\r\n  let data = {\r\n    token: token,\r\n    userid: userid,\r\n  };\r\n  if (!token || !userid || !expired) {\r\n    return null;\r\n  }\r\n  if (now.getDate() >= parseInt(expired)) {\r\n    destroyToken();\r\n  } else {\r\n    return data;\r\n  }\r\n};\r\n\r\nconst destroyToken = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expired\");\r\n};\r\n\r\nconst isAuthenticated = () => {\r\n  if (getToken()) return true;\r\n  else return false;\r\n};\r\n\r\nconst Auth = {\r\n  setToken,\r\n  getTokenAndUserId,\r\n  destroyToken,\r\n  isAuthenticated,\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}