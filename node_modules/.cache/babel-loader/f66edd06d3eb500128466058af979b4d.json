{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\code\\\\ReactJS\\\\chatapp\\\\src\\\\pages\\\\home\\\\index.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport AutoComplete from \"../../components/autocomplete\";\nimport axios from \"axios\";\nimport favicon from \"../../assets/favicon.ico\";\nimport { urlApiMain, urlWeb } from \"../../utils/url\";\nimport { Link } from \"react-router-dom\";\nimport { Auth } from \"../../config\";\nimport Push from \"push.js\";\nimport Moment from \"react-moment\";\n\nconst CountUnreadMessage = props => {\n  const {\n    sender,\n    receiver\n  } = props;\n  const [count_unreadMessage, setUnreadMessage] = useState(0);\n\n  const unreadMessage = (sender, receiver) => {\n    axios.get(`${urlApiMain}countunreadmessage/${sender}/${receiver}`).then(res => {\n      setUnreadMessage(res.data);\n\n      if (res.data > 0) {\n        let sw = sessionStorage.getItem(\"show_notification\");\n\n        if (sw == 0) {\n          sessionStorage.setItem(\"show_notification\", 1);\n          axios.get(`${urlApiMain}unreadmessage/${sender}`).then(res => {\n            showNotif(res.data.name, res.data.messages);\n          }).catch(err => {});\n        }\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const showNotif = (name, message) => {\n    Push.create(\"You have new message!\", {\n      body: name + \" \" + message,\n      icon: favicon,\n      timeout: 4000,\n      onClick: function () {\n        window.focus();\n        this.close();\n      }\n    });\n  };\n\n  useEffect(() => {\n    // unreadMessage(sender, receiver);\n    const interval = setInterval(() => {\n      unreadMessage(sender, receiver);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"absolute right-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, count_unreadMessage > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-green-400 rounded-full p-1 items-center justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-bold text-white text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, count_unreadMessage)) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nconst LatestMessage = props => {\n  const {\n    sender,\n    receiver\n  } = props;\n  const [latestMessage, setLatestMessage] = useState({});\n\n  const getLatestMessage = (sender, receiver) => {\n    axios.get(`${urlApiMain}getlatetsmessage/${sender}/${receiver}`).then(res => {\n      setLatestMessage(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getLatestMessage(sender, receiver);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row relative mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, latestMessage.image ? /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), \" \", latestMessage.messages), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"absolute right-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    fromNow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, latestMessage.created_at)));\n};\n\nconst Home = () => {\n  const [profil, setProfil] = useState([]);\n  const [userToTalk, setUserToTalk] = useState([]);\n  const [userLatestMessages, setUserLatestMessages] = useState([]);\n\n  const getProfil = () => {\n    axios.get(`${urlApiMain}profil`).then(res => {\n      setProfil(res.data[0]);\n    }).catch(err => {});\n  };\n\n  const logout = () => {\n    axios.get(`${urlApiMain}updateuserclose/${Auth.getTokenAndUserId().userid}`).then(res => {\n      Auth.destroyToken();\n      window.location.reload();\n    }).catch();\n  };\n\n  const letsMessageWithPeople = () => {\n    axios.get(`${urlApiMain}letmessage`).then(res => {\n      setUserToTalk(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const latestMessages = () => {\n    axios.get(`${urlApiMain}latestmessage`).then(res => {\n      setUserLatestMessages(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getProfil();\n    letsMessageWithPeople();\n    latestMessages();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white md:w-1/4 mr-4 mt-6 rounded shadow-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-6 py-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"w-1/3 flex-1 rounded-full items-center\",\n    src: `${urlWeb}profil/${profil.photo}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"flex-1 text-gray-800 font-semibold text-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, profil.name), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"flex-1 text-gray-500 profil-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, profil.email), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `edit_user`,\n    className: \"bg-blue-500 hover:bg-blue-800 text-white font-bold px-4 py-2 mr-2 rounded-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: logout,\n    className: \"bg-blue-500 hover:bg-blue-800 text-white font-bold px-4 py-2 rounded-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-sign-out-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white md:w-1/2 mt-6 rounded shadow-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-6 py-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoComplete, {\n    suggestions: userToTalk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, userLatestMessages.map(latestUser => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"flex flex-row relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"rounded-full img-profil-latest\",\n    src: urlWeb + \"profil/\" + latestUser.photo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    className: \"text-gray-700 font-semibold text-lg ml-2\",\n    to: `/chat/${latestUser.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, latestUser.name), /*#__PURE__*/React.createElement(CountUnreadMessage, {\n    sender: latestUser.id,\n    receiver: Auth.getTokenAndUserId().userid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(LatestMessage, {\n    sender: latestUser.id,\n    receiver: Auth.getTokenAndUserId().userid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/CODE/code/ReactJS/chatapp/src/pages/home/index.jsx"],"names":["React","useEffect","useState","AutoComplete","axios","favicon","urlApiMain","urlWeb","Link","Auth","Push","Moment","CountUnreadMessage","props","sender","receiver","count_unreadMessage","setUnreadMessage","unreadMessage","get","then","res","data","sw","sessionStorage","getItem","setItem","showNotif","name","messages","catch","err","console","log","message","create","body","icon","timeout","onClick","window","focus","close","interval","setInterval","clearInterval","LatestMessage","latestMessage","setLatestMessage","getLatestMessage","image","created_at","Home","profil","setProfil","userToTalk","setUserToTalk","userLatestMessages","setUserLatestMessages","getProfil","logout","getTokenAndUserId","userid","destroyToken","location","reload","letsMessageWithPeople","latestMessages","photo","email","map","latestUser","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AutoComplete from \"../../components/autocomplete\";\r\nimport axios from \"axios\";\r\nimport favicon from \"../../assets/favicon.ico\";\r\nimport { urlApiMain, urlWeb } from \"../../utils/url\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Auth } from \"../../config\";\r\nimport Push from \"push.js\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst CountUnreadMessage = (props) => {\r\n  const { sender, receiver } = props;\r\n  const [count_unreadMessage, setUnreadMessage] = useState(0);\r\n\r\n  const unreadMessage = (sender, receiver) => {\r\n    axios\r\n      .get(`${urlApiMain}countunreadmessage/${sender}/${receiver}`)\r\n      .then((res) => {\r\n        setUnreadMessage(res.data);\r\n        if (res.data > 0) {\r\n          let sw = sessionStorage.getItem(\"show_notification\");\r\n          if (sw == 0) {\r\n            sessionStorage.setItem(\"show_notification\", 1);\r\n            axios\r\n              .get(`${urlApiMain}unreadmessage/${sender}`)\r\n              .then((res) => {\r\n                showNotif(res.data.name, res.data.messages);\r\n              })\r\n              .catch((err) => {});\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const showNotif = (name, message) => {\r\n    Push.create(\"You have new message!\", {\r\n      body: name + \" \" + message,\r\n      icon: favicon,\r\n      timeout: 4000,\r\n      onClick: function () {\r\n        window.focus();\r\n        this.close();\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // unreadMessage(sender, receiver);\r\n    const interval = setInterval(() => {\r\n      unreadMessage(sender, receiver);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"absolute right-0\">\r\n        {count_unreadMessage > 0 ? (\r\n          <div className=\"bg-green-400 rounded-full p-1 items-center justify-center\">\r\n            <p className=\"font-bold text-white text-sm\">\r\n              {count_unreadMessage}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst LatestMessage = (props) => {\r\n  const { sender, receiver } = props;\r\n  const [latestMessage, setLatestMessage] = useState({});\r\n\r\n  const getLatestMessage = (sender, receiver) => {\r\n    axios\r\n      .get(`${urlApiMain}getlatetsmessage/${sender}/${receiver}`)\r\n      .then((res) => {\r\n        setLatestMessage(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLatestMessage(sender, receiver);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-row relative mb-2\">\r\n      <p>\r\n        {latestMessage.image ? <i class=\"fas fa-image\"></i> : <></>}{\" \"}\r\n        {latestMessage.messages}\r\n      </p>\r\n      <p className=\"absolute right-0\">\r\n        <Moment fromNow>{latestMessage.created_at}</Moment>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => {\r\n  const [profil, setProfil] = useState([]);\r\n  const [userToTalk, setUserToTalk] = useState([]);\r\n  const [userLatestMessages, setUserLatestMessages] = useState([]);\r\n\r\n  const getProfil = () => {\r\n    axios\r\n      .get(`${urlApiMain}profil`)\r\n      .then((res) => {\r\n        setProfil(res.data[0]);\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n\r\n  const logout = () => {\r\n    axios\r\n      .get(`${urlApiMain}updateuserclose/${Auth.getTokenAndUserId().userid}`)\r\n      .then((res) => {\r\n        Auth.destroyToken();\r\n        window.location.reload();\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  const letsMessageWithPeople = () => {\r\n    axios\r\n      .get(`${urlApiMain}letmessage`)\r\n      .then((res) => {\r\n        setUserToTalk(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const latestMessages = () => {\r\n    axios\r\n      .get(`${urlApiMain}latestmessage`)\r\n      .then((res) => {\r\n        setUserLatestMessages(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProfil();\r\n    letsMessageWithPeople();\r\n    latestMessages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <div className=\"bg-white md:w-1/4 mr-4 mt-6 rounded shadow-md\">\r\n        <div className=\"px-6 py-6\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <img\r\n              className=\"w-1/3 flex-1 rounded-full items-center\"\r\n              src={`${urlWeb}profil/${profil.photo}`}\r\n            />\r\n            <h3 className=\"flex-1 text-gray-800 font-semibold text-xl\">\r\n              {profil.name}\r\n            </h3>\r\n            <h3 className=\"flex-1 text-gray-500 profil-email\">\r\n              {profil.email}\r\n            </h3>\r\n            <div className=\"flex flex-row mt-4\">\r\n              <Link\r\n                to={`edit_user`}\r\n                className=\"bg-blue-500 hover:bg-blue-800 text-white font-bold px-4 py-2 mr-2 rounded-full\"\r\n              >\r\n                <i class=\"fas fa-edit\"></i>\r\n              </Link>\r\n              <button\r\n                onClick={logout}\r\n                className=\"bg-blue-500 hover:bg-blue-800 text-white font-bold px-4 py-2 rounded-full\"\r\n              >\r\n                <i class=\"fas fa-sign-out-alt\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg-white md:w-1/2 mt-6 rounded shadow-md\">\r\n        <div className=\"px-6 py-6\">\r\n          <AutoComplete suggestions={userToTalk} />\r\n          <ul className=\"mt-3\">\r\n            {userLatestMessages.map((latestUser) => (\r\n              <>\r\n                <li className=\"flex flex-row relative\">\r\n                  <img\r\n                    className=\"rounded-full img-profil-latest\"\r\n                    src={urlWeb + \"profil/\" + latestUser.photo}\r\n                  />\r\n                  <Link\r\n                    className=\"text-gray-700 font-semibold text-lg ml-2\"\r\n                    to={`/chat/${latestUser.id}`}\r\n                  >\r\n                    {latestUser.name}\r\n                  </Link>\r\n                  <CountUnreadMessage\r\n                    sender={latestUser.id}\r\n                    receiver={Auth.getTokenAndUserId().userid}\r\n                  />\r\n                </li>\r\n                <LatestMessage\r\n                  sender={latestUser.id}\r\n                  receiver={Auth.getTokenAndUserId().userid}\r\n                />\r\n                <hr />\r\n              </>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}