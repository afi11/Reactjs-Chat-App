{"ast":null,"code":"const setToken = (token, expired) => {\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"expired\", expired);\n};\n\nconst getToken = () => {\n  let token = localStorage.getItem(\"token\");\n  let expired = localStorage.getItem(\"expired\");\n\n  if (!token || !expired) {\n    return null;\n  }\n\n  if (Date.now() > parseInt(expired)) {\n    destroyToken();\n  } else {\n    return token;\n  }\n};\n\nconst destroyToken = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expired\");\n};\n\nconst isAuthenticated = () => {\n  if (getToken()) return true;else return false;\n};\n\nconst Auth = {\n  setToken,\n  getToken,\n  destroyToken,\n  isAuthenticated\n};\nexport default Auth;","map":{"version":3,"sources":["D:/CODE/code/ReactJS/chatapp/src/config/auth/index.js"],"names":["setToken","token","expired","localStorage","setItem","getToken","getItem","Date","now","parseInt","destroyToken","removeItem","isAuthenticated","Auth"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACnCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAE,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCF,OAAhC;AACD,CAHD;;AAKA,MAAMG,QAAQ,GAAG,MAAM;AACrB,MAAIJ,KAAK,GAAGE,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAZ;AACA,MAAIJ,OAAO,GAAGC,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAd;;AACA,MAAI,CAACL,KAAD,IAAU,CAACC,OAAf,EAAwB;AACtB,WAAO,IAAP;AACD;;AACD,MAAIK,IAAI,CAACC,GAAL,KAAaC,QAAQ,CAACP,OAAD,CAAzB,EAAoC;AAClCQ,IAAAA,YAAY;AACb,GAFD,MAEO;AACL,WAAOT,KAAP;AACD;AACF,CAXD;;AAaA,MAAMS,YAAY,GAAG,MAAM;AACzBP,EAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,SAAxB;AACD,CAHD;;AAKA,MAAMC,eAAe,GAAG,MAAM;AAC5B,MAAIP,QAAQ,EAAZ,EAAgB,OAAO,IAAP,CAAhB,KACK,OAAO,KAAP;AACN,CAHD;;AAKA,MAAMQ,IAAI,GAAG;AACXb,EAAAA,QADW;AAEXK,EAAAA,QAFW;AAGXK,EAAAA,YAHW;AAIXE,EAAAA;AAJW,CAAb;AAOA,eAAeC,IAAf","sourcesContent":["const setToken = (token, expired) => {\r\n  localStorage.setItem(\"token\", token);\r\n  localStorage.setItem(\"expired\", expired);\r\n};\r\n\r\nconst getToken = () => {\r\n  let token = localStorage.getItem(\"token\");\r\n  let expired = localStorage.getItem(\"expired\");\r\n  if (!token || !expired) {\r\n    return null;\r\n  }\r\n  if (Date.now() > parseInt(expired)) {\r\n    destroyToken();\r\n  } else {\r\n    return token;\r\n  }\r\n};\r\n\r\nconst destroyToken = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expired\");\r\n};\r\n\r\nconst isAuthenticated = () => {\r\n  if (getToken()) return true;\r\n  else return false;\r\n};\r\n\r\nconst Auth = {\r\n  setToken,\r\n  getToken,\r\n  destroyToken,\r\n  isAuthenticated,\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}